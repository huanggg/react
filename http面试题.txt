三、TCP和UDP的区别 ?
       1、TCP面向连接（如打电话要先拨号建立连接）；UDP是无连接的，即发送数据之前不需要建立连接??（连接和无连接）
       2、TCP提供可靠的服务。即通过TCP连接传送的数据，无差错，不丢失，不重复，且按序到达;UDP尽最大努力交付，即不保证可靠交付（可靠和不可靠）
       3、TCP面向字节流，实际上是TCP把数据看成一连串无结构的字节流；UDP是面向报文的? ? UDP没有拥塞控制，因此网络出现拥塞不会使源主机的发送速率降低（对实时应用很有用，如IP电话，实时视频会议等）          （字节流和报文加拥塞）
       4、每一条TCP连接只能是点到点的; UDP支持一对一，一对多，多对一和多对多的交互通信（一对一和一对多）
       5、TCP首部开销20字节;UDP的首部开销小，只有8个字节（开销问题）
       6、TCP的逻辑通信信道是全双工的可靠信道，UDP则是不可靠


HTTPS工作原理

       一、首先HTTP请求服务端生成证书，客户端对证书的有效期、合法性、域名是否与请求的域名一致、证书的公钥（RSA加密）等进行校验；
       二、客户端如果校验通过后，就根据证书的公钥的有效， 生成随机数，随机数使用公钥进行加密（RSA加密）；
       三、消息体产生的后，对它的摘要进行MD5（或者SHA1）算法加密，此时就得到了RSA签名；
       四、发送给服务端，此时只有服务端（RSA私钥）能解密。
       五、解密得到的随机数，再用AES加密，作为密钥（此时的密钥只有客户端和服务端知道）。

12 http 实现的原理（超文本传输协议）
      1 域名解析
      2 发起tcp的三次握手
      3 发起http请求
      4 服务器响应http请求
      5 浏览器解析html代码，并请求html代码中的资源（如js css 图片）
      6 浏览器对页面进行渲染呈现给用户
15 HTTPS与HTTP的一些区别
       HTTPS协议需要到CA申请证书，一般免费证书很少，需要交费。
       HTTP协议运行在TCP之上，所有传输的内容都是明文，HTTPS运行在SSL/TLS之上，SSL/TLS运行在TCP之上，所有传输的内容都经过加密的。
       HTTP和HTTPS使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。
       HTTPS可以有效的防止运营商劫持，解决了防劫持的一个大问题
16 HTTP 2.0 和 HTTP1.1 区别
       多路复用
       首部压缩
       HTTP2支持服务器推送
14 一次完整的HTTP请求所经历的7个步骤
     1. 建立TCP连接
     在HTTP工作开始之前，Web浏览器首先要通过网络与Web服务器建立连接，该连接是通过TCP来完成的，
     该协议与IP协议共同构建Internet，即著名的TCP/IP协议族，因此Internet又被称作是TCP/IP网络。
     HTTP是比TCP更高层次的应用层协议，根据规则，只有低层协议建立之后才能进行更高层协议的连接，
     因此，首先要建立TCP连接，一般TCP连接的端口号是80。
     2. Web浏览器向Web服务器发送请求命令 
     一旦建立了TCP连接，Web浏览器就会向Web服务器发送请求命令。例如：GET/sample/hello.jsp HTTP/1.1。
     3. Web浏览器发送请求头信息 
     浏览器发送其请求命令之后，还要以头信息的形式向Web服务器发送一些别的信息，之后浏览器发送了一空白行来通知服务器，
     它已经结束了该头信息的发送。
     4. Web服务器应答 
     客户机向服务器发出请求后，服务器会客户机回送应答， HTTP/1.1 200 OK ，应答的第一部分是协议的版本号和应答状态码。
     5. Web服务器发送应答头信息 
     正如客户端会随同请求发送关于自身的信息一样，服务器也会随同应答向用户发送关于它自己的数据及被请求的文档。
     6. Web服务器向浏览器发送数据 
     Web服务器向浏览器发送头信息后，它会发送一个空白行来表示头信息的发送到此为结束，接着，它就以Content-Type应答头信息所描述的格式发送用户所请求的实际数据。
     7. Web服务器关闭TCP连接 
     一般情况下，一旦Web服务器向浏览器发送了请求数据，它就要关闭TCP连接，然后如果浏览器或者服务器在其头信息加入了这行代码：Connection:keep-alive
     TCP连接在发送后将仍然保持打开状态，于是，浏览器可以继续通过相同的连接发送请求。保持连接节省了为每个请求建立新连接所需的时间，还节约了网络带宽。
10.Http协议首部字段
   a、通用首部字段（请求报文与响应报文都会使用的首部字段）
     Date：创建报文时间
     Connection：连接的管理
     Cache-Control：缓存的控制
     Transfer-Encoding：报文主体的传输编码方式
   b、请求首部字段（请求报文会使用的首部字段）
     Host：请求资源所在服务器
     Accept：可处理的媒体类型
     Accept-Charset：可接收的字符集
     Accept-Encoding：可接受的内容编码
     Accept-Language：可接受的自然语言
   c、响应首部字段（响应报文会使用的首部字段）
     Accept-Ranges：可接受的字节范围
     Location：令客户端重新定向到的
     URI
     Server：HTTP服务器的安装信息
   d、实体首部字段（请求报文与响应报文的的实体部分使用的首部字段）
     Allow：资源可支持的HTTP方法
     Content-Type：实体主类的类型
     Content-Encoding：实体主体适用的编码方式
     Content-Language：实体主体的自然语言
     Content-Length：实体主体的的字节数
     Content-Range：实体主体的位置范围，一般用于发出部分请求时使用
11  http状态码
     200：请求被正常处理
     204：请求被受理但没有资源可以返回
     206：客户端只是请求资源的一部分，服务器只对请求的部分资源执行GET方法，相应报文中通过Content-Range指定范围的资源。
     301：永久性重定向
     302：临时重定向
     303：与302状态码有相似功能，只是它希望客户端在请求一个URI的时候，能通过GET方法重定向到另一个URI上
     304：发送附带条件的请求时，条件不满足时返回，与重定向无关
     307：临时重定向，与302类似，只是强制要求使用POST方法
     400：请求报文语法有误，服务器无法识别
     401：请求需要认证
     403：请求的对应资源禁止被访问
     404：服务器无法找到对应资源
     500：服务器内部错误
     503：服务器正忙
