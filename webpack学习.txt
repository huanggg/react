1 webpack 概念

webpack是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)。
当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，
其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个bundle


2、查看webpack详细信息

   $ npm info webpack

3、查看webpack版本

   webpack -v

4、下载指定版本webpack

   npm install webpack@4.3.0 -g

4  安装webpack环境

   cnpm install webpack -g

5  安装打包工具webpack-cli

   cnpm install webpack-cli -g

6 “__dirname”是node.js中的一个全局变量，它指向当前执行脚本所在的目录。

7  OccurenceOrderPlugin :为组件分配ID，通过这个插件webpack可以分析和优先考虑使用最多的模块，并为它们分配最小的ID

   UglifyJsPlugin：压缩JS代码；

   ExtractTextPlugin：分离CSS和JS文件

    plugins: [
        new webpack.BannerPlugin('版权所有，翻版必究'),
        new HtmlWebpackPlugin({
            template: __dirname + "/app/index.tmpl.html"
        }),
        new webpack.optimize.OccurrenceOrderPlugin(),
        new webpack.optimize.UglifyJsPlugin(),
        new ExtractTextPlugin("style.css")
    ],

8 chunk 代码块
9 commonChunPlugin()  提取公共模块
10 DllPlugin () DllReferencePlugin()  用于分离打包，加快构建速度

11 loder 使得webpack拥有解析和打包非js文件的能力(文件转换编译器)

12 plugin 扩展webpack能力的插件

13 热模块更新是webpack 的一个功能，就是不需要刷新浏览器就可以更新，是高级版的自动刷新浏览器

14 webpack -dev -server 使用内存存储webpack开发环境下的打包文件，并且可以使用模块热更新，比传统的http服务队开发更加简单高效

15 升级happypack插件（happypack可以进行多线程加速打包）
16 移除了CommonsChunkPlugin (提取公共代码)，用optimization.splitChunks和optimization.runtimeChunk来代替

17 如何利用webpack来优化前端性能

   1. 压缩代码。uglifyJsPlugin 压缩js代码， mini-css-extract-plugin 压缩css代码

   2. 利用CDN加速，将引用的静态资源修改为CDN上对应的路径，可以利用webpack对于output参数和loader的publicpath参数来修改资源路径

   3. 删除死代码（tree shaking），css需要使用Purify-CSS
 tree shaking 移除 JavaScript 上下文中的未引用代码(dead-code)
   4. 提取公共代码。webpack4移除了CommonsChunkPlugin (提取公共代码)，用optimization.splitChunks和optimization.runtimeChunk来代替


   5  happypack插件（happypack可以进行多线程加速打包）

18 webpack构建流程

  1  初始化参数，从配置文件和shell语句中读到的参数合并，得到最后的参数

  2. 开始编译：用合并得到的参数初始化complier对象，加载是所有配置的插件，执行run方法开始编译

  3. 确定入口，通过entry找到入口文件

  4. 编译模块，从入口文件出发，调用所有配置的loader对模块进行解析翻译，在找到该模块依赖的模块进行处理

  5. 完成模块编译，得到每个模块被翻译之后的最终的内容和依赖关系

  6. 输出资源，根据入口和模块之间的依赖关系，组装成一个个包含多个模块的chunk，在把每个chunk转换成一个单独的文件加载到输出列表

  7. 输出完成，确定输出的路径和文件名，把内容写到文件系统中

19  什么是长缓存 在webpack中如何做到长缓存优化？



  浏览器在用户访问页面的时候，为了加快加载速度，会对用户访问的静态资源进行存储，但是每一次代码升级或是更新，
  都需要浏览器去下载新的代码，最方便和简单的更新方式就是引入新的文件名称。在webpack中可以在output纵输出的文件指定chunkhash,
  并且分离经常更新的代码和框架代码。通过NameModulesPlugin或是HashedModuleIdsPlugin使再次打包文件名不变。



20  什么是Tree-shaking?CSS可以Tree-shaking吗?

  Tree-shaking是指在打包中去除那些引入了，但是在代码中没有被用到的那些死代码。
  在webpack中Tree-shaking是通过uglifySPlugin来Tree-shaking
  JS。Css需要使用Purify-CSS。